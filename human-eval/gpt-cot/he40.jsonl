{"task_id": "HumanEval/40", "completion": "from typing import List\n\ndef triples_sum_to_zero(l: List[int]) -> bool:\n    \"\"\"\n    Return True if there exist three (index-)distinct elements in `l` whose sum is zero.\n    Elements may have the same value as long as they are from different indices (e.g., [0,0,0] -> True).\n\n    Examples:\n    >>> triples_sum_to_zero([1, 3, 5, 0])\n    False\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    True\n    >>> triples_sum_to_zero([1, 2, 3, 7])\n    False\n    >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n    True\n    >>> triples_sum_to_zero([1])\n    False\n    \"\"\"\n    n = len(l)\n    if n < 3:\n        return False\n\n    nums = sorted(l)  # work on a sorted copy; do not mutate caller's list\n\n    for i in range(n - 2):\n        # Small optimization: avoid repeating the same anchor value\n        if i > 0 and nums[i] == nums[i - 1]:\n            continue\n\n        target = -nums[i]\n        lo, hi = i + 1, n - 1\n\n        while lo < hi:\n            s = nums[lo] + nums[hi]\n            if s == target:\n                return True  # Found nums[i] + nums[lo] + nums[hi] == 0\n            elif s < target:\n                lo += 1\n            else:\n                hi -= 1\n\n    return False"}
