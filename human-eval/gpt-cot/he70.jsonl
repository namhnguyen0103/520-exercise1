{"task_id": "HumanEval/70", "completion": "from typing import List\n\ndef strange_sort_list(lst: List[int]) -> List[int]:\n    \"\"\"\n    Return the list in 'strange' order:\n    start with the minimum, then maximum of remaining, then next minimum, etc.\n\n    Examples:\n    >>> strange_sort_list([1, 2, 3, 4])\n    [1, 4, 2, 3]\n    >>> strange_sort_list([5, 5, 5, 5])\n    [5, 5, 5, 5]\n    >>> strange_sort_list([])\n    []\n    \"\"\"\n    n = len(lst)\n    if n <= 1:\n        return lst[:]  # return a shallow copy for consistency\n\n    arr = sorted(lst)\n    res: List[int] = []\n\n    i, j = 0, n - 1\n    take_min = True\n    while i <= j:\n        if take_min:\n            res.append(arr[i])\n            i += 1\n        else:\n            res.append(arr[j])\n            j -= 1\n        take_min = not take_min\n\n    return res\n\n\n# --- quick checks ---\nif __name__ == \"__main__\":\n    assert strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    assert strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    assert strange_sort_list([]) == []\n    assert strange_sort_list([7]) == [7]\n    assert strange_sort_list([3, 1, 2]) in ([1, 3, 2],)  # deterministic: [1,3,2]\n    print(\"All tests passed.\")"}
