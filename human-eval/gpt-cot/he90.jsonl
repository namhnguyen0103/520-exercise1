{"task_id": "HumanEval/90", "completion": "from math import inf\nfrom typing import List, Optional\n\ndef next_smallest(lst: List[int]) -> Optional[int]:\n    \"\"\"\n    Return the 2nd smallest *distinct* element of lst.\n    Return None if it does not exist.\n    Examples:\n        next_smallest([1, 2, 3, 4, 5]) == 2\n        next_smallest([5, 1, 4, 3, 2]) == 2\n        next_smallest([]) == None\n        next_smallest([1, 1]) == None\n    \"\"\"\n    if not lst:\n        return None\n\n    m1, m2 = inf, inf  # m1 = smallest, m2 = second-smallest distinct\n\n    for x in lst:\n        if x < m1:\n            m1, m2 = x, m1\n        elif m1 < x < m2:\n            m2 = x\n        # else: x == m1 or x >= m2 \u2192 no update\n\n    return None if m2 is inf else m2\n\n\n# Quick self-checks\nif __name__ == \"__main__\":\n    assert next_smallest([1, 2, 3, 4, 5]) == 2\n    assert next_smallest([5, 1, 4, 3, 2]) == 2\n    assert next_smallest([]) is None\n    assert next_smallest([1, 1]) is None\n    assert next_smallest([2, 2, 3]) == 3\n    assert next_smallest([7, 7, 7, 7]) is None"}
